<?xml version="1.0"?>

<dds xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="http://community.rti.com/schema/7.3.0/rti_dds_qos_profiles.xsd">

  <!--              
    ____________________________________________________________________________

                      QOS Profiles used for the REMOTE ADMIN interface    
    ____________________________________________________________________________
    -->

  <qos_library name="REMOTE_ADMIN">

    <!-- Default Remote Admin QoS:
             
        This profile contains the QoS that Requesters and Repliers 
        would use by default. We can use it as a base profile to inherit
        from and override some parameters 
      -->
    <qos_profile name="remote_admin_default" base_name="BuiltinQosLib::Generic.Common">
      <datawriter_qos>

        <!-- Strict reliable -->
        <reliability>
          <kind>RELIABLE_RELIABILITY_QOS</kind>
          <max_blocking_time>
            <sec>$(WAN_MAX_BLOCKING_SEC)</sec>
            <nanosec>0</nanosec>
          </max_blocking_time>
        </reliability>

        <history>
          <kind>KEEP_ALL_HISTORY_QOS</kind>
        </history>

        <!-- These are typical protocol parameters for a reliable DataWriter -->
        <protocol>
          <rtps_reliable_writer>
            <max_heartbeat_retries>
              LENGTH_UNLIMITED
            </max_heartbeat_retries>
            <heartbeats_per_max_samples>
              2
            </heartbeats_per_max_samples>
            <heartbeat_period>
              <sec>0</sec>
              <nanosec>100000000</nanosec> <!--100ms -->
            </heartbeat_period>
            <fast_heartbeat_period>
              <sec>0</sec>
              <nanosec>10000000</nanosec> <!--10ms -->
            </fast_heartbeat_period>
            <late_joiner_heartbeat_period>
              <sec>0</sec>
              <nanosec>10000000</nanosec> <!--10ms -->
            </late_joiner_heartbeat_period>
            <max_nack_response_delay>
              <sec>0</sec>
              <nanosec>0</nanosec>
            </max_nack_response_delay>
            <min_nack_response_delay>
              <sec>0</sec>
              <nanosec>0</nanosec>
            </min_nack_response_delay>
            <max_send_window_size>32</max_send_window_size>
            <min_send_window_size>32</min_send_window_size>
          </rtps_reliable_writer>
        </protocol>

        <writer_resource_limits>
          <!-- 
            This setting enables efficient communication
            between a replier and an arbitrary number of requesters 
            -->
          <max_remote_reader_filters>
            LENGTH_UNLIMITED
          </max_remote_reader_filters>
        </writer_resource_limits>
      </datawriter_qos>

      <datareader_qos>
        <!-- Strict reliable -->
        <reliability>
          <kind>RELIABLE_RELIABILITY_QOS</kind>
        </reliability>

        <history>
          <kind>KEEP_ALL_HISTORY_QOS</kind>
        </history>

        <!-- These are typical protocol parameters for a reliable DataReader -->
        <protocol>
          <rtps_reliable_reader>
            <max_heartbeat_response_delay>
              <sec>0</sec>
              <nanosec>0</nanosec>
            </max_heartbeat_response_delay>
            <min_heartbeat_response_delay>
              <sec>0</sec>
              <nanosec>0</nanosec>
            </min_heartbeat_response_delay>
          </rtps_reliable_reader>
        </protocol>

      </datareader_qos>

    </qos_profile>

    <!-- 
      This is the profile used by the Requester. 
      It inherits from "default", defined above, and overrides some QoS 
      settings (durability and QoS settings related to unbounded 
      types (recall that the service administration types are 
      unbounded) 
      -->
    <qos_profile name="remote_admin_requester_qos" base_name="remote_admin_default">

      <!-- QoS for the data writer that sends requests -->
      <datawriter_qos>
        <property>
          <value>
            <element>
              <name>dds.data_writer.history.memory_manager.fast_pool.pool_buffer_max_size</name>
              <value>16384</value>
            </element>
          </value>
        </property>
      </datawriter_qos>

      <!-- QoS for the data reader that receives replies -->
      <datareader_qos>
        <property>
          <value>
            <element>
              <name>dds.data_reader.history.memory_manager.fast_pool.pool_buffer_max_size</name>
              <value>16384</value>
            </element>
          </value>
        </property>
      </datareader_qos>
    </qos_profile>

    <!-- 
      This is the profile used by the Replier. 
      It inherits from "default", defined above, and overrides some QoS 
      settings (durability and QoS settings related to unbounded 
      types (recall that the service administration types are 
      unbounded) 
      -->
    <qos_profile name="remote_admin_replier_qos" base_name="remote_admin_default">

      <!-- QoS for the data writer that sends replies -->
      <datawriter_qos>
        <property>
          <value>
            <element>
              <name>dds.data_writer.history.memory_manager.fast_pool.pool_buffer_max_size</name>
              <value>16384</value>
            </element>
          </value>
        </property>
      </datawriter_qos>

      <!-- QoS for the data reader that receives requests -->
      <datareader_qos>
        <property>
          <value>
            <element>
              <name>dds.data_reader.history.memory_manager.fast_pool.pool_buffer_max_size</name>
              <value>16384</value>
            </element>
          </value>
        </property>
      </datareader_qos>
    </qos_profile>

  </qos_library>

</dds>